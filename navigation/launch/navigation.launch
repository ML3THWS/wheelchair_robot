<?xml version="1.0"?>
<launch>
  <arg name="rviz" default="true" />
  <arg name="two_maps" default="true"/>
  <arg name="map_for_planning" default="map_plan"/>
  <arg name="map_file_plan" default="$(find navigation)/maps/labor/plan_map/hector_labor.yaml"/>
  <arg name="map_file" default="$(find navigation)/maps/labor/hector_labor.yaml"/>
  

  <!-- Map server -->
  <node pkg="map_server" name="map_server" type="map_server" args="$(arg map_file)">
    <remap from="/map" to="/map"/>
  </node>

  <!--only use adiditonal map_file_plan if two maps = true-->
  <group if="$(eval two_maps == true)">
    <node pkg="map_server" name="map_server_plan" type="map_server" args="$(arg map_file_plan)">
      <remap from="/map" to="$(arg map_for_planning)"/>
    </node>
  </group>
  <group if="$(eval two_maps == false)">
    <node pkg="map_server" name="map_server_plan" type="map_server" args="$(arg map_file)">
      <remap from="/map" to="$(arg map_for_planning)"/>
    </node>
  </group>
   
  <include file="$(find amcl_localization)/launch/amcl_launch.launch"/>

  <!-- move base Pathplaning -->
  <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
    # Global planner
    <param name="base_global_planner" value="global_planner/GlobalPlanner" />  
    
    # Local planner
    <param name="base_local_planner" value="dwa_local_planner/DWAPlannerROS" /> 
    
    # Costmap
    <rosparam file="$(find navigation)/param/costmap_common_params_wheelchair.yaml" command="load" ns="global_costmap" />
    <rosparam file="$(find navigation)/param/costmap_common_params_wheelchair.yaml" command="load" ns="local_costmap" />
    <rosparam file="$(find navigation)/param/local_costmap_params.yaml" command="load" />
    <rosparam file="$(find navigation)/param/global_costmap_params.yaml" command="load" />
    
    # Movebase
    <rosparam file="$(find navigation)/param/move_base_params.yaml" command="load" />
    
    # global planer parameter
    <rosparam file="$(find navigation)/param/global_planner/global_global_planner_params.yaml" command="load"/>
    
    # local planer parameter
    <rosparam file="$(find navigation)/param/local_planner/dwa_local_planner_params_wheelchair.yaml" command="load" />
    
    <remap from="cmd_vel" to="/cmd_vel"/>
    <remap from="odom" to="odom"/>

    <remap from="/map" to="$(arg map_for_planning)"/>

  </node>

  <!-- prevent backwards movement if not necessary -->
  <node pkg="navigation" type="my_planner" name="my_planner" >
        <rosparam file="$(find navigation)/param/my_planner.yaml" command="load"/>
        <remap from="/map" to="$(arg map_for_planning)"/>
  </node>

  <!-- dynamic Footprint-->
  <node pkg="navigation" type="dynamic_footprint.py" name="dynamic_footprint" />


  <!-- send cmd vel 0 values to make sure the robot stopped on the destination-->
  <node pkg="navigation" type="reset_cmd_vel_on_destination.py" name="reset_cmd_vel_on_destination_node" />

  <!-- nav_layer for gui with nav_goal, nav_cancle, nav_save_position, ...-->
  <node pkg="robot_gui" type="nav_layer.py" name="nav_layer" />

  <group if="$(eval rviz == true)">
    <node pkg="rviz" type="rviz" name="rviz" required="true"  args="-d $(find navigation)/rviz/rviz_config.rviz"/>
  </group>

</launch>
